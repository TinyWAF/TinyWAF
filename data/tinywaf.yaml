listen:
  ips:
    - 127.0.0.1
  ports:
    - source: 8080
      target: 80
    # - source: 80
    # - source: 443
  # By default websocket connections are proxied to the destination
  websockets: true
  # Set healthcheck to "" to disable it
  healthcheckPath: "/healthcheck"
  tls:
    # @todo: config for TLS/SSL certificate(s)

upstream:
  # Only one destination can be set. The port and path of the request will be
  # copied from the original one.
  # The protocol (HTTP/HTTPS) is required (HTTP is recommended for same-machine,
  # HTTPS is recommended for dedicated machine)
  destination: http://localhost
  # timeout:

log:
  outfile: ./data/tinywaf.log # /var/log/tinywaf.log
  levels:
    access: false # Log access requests to all URLs (not recommended on production)
    warn: true # Log warnings about suspicious activity
    block: true # Log when requests are blocked due to rules

# By default TinyWAF returns a basic HTML response if a request/response is not
# handled (eg. it was blocked). To show custom (eg. branded) HTML pages to users
# uncomment these lines:
html:
#   blocked: /var/tinywaf/html/403-blocked.html
#   ratelimit: /var/tinywaf/html/429-ratelimit.html
#   gatewayTimeout: /var/tinywaf/html/504-gatewaytimeout.html

# WIP config schema for including and disabling rules
rules:
  blockThreshold: 5
  request:
    src:
      - /var/tinywaf/rules/default-managed/request-*.yaml
      - /var/tinywaf/rules/request-*.yaml
    # By default all included rules are enabled for all paths and methods
    overrides:
      - path: /my-wp-site/*
        rule: no-wordpress:*
        action: none # Disable all rules in the no-wordpress group for this path
  response:
    src:
      - /var/tinywaf/rules/default-managed/response-*.yaml
      - /var/tinywaf/rules/response-*.yaml
    overrides:
      # Modify rules based on paths
